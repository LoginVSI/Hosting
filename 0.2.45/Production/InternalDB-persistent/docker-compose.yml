networks:
  databases:
    driver: overlay
  front:
    driver: overlay
  messaging:
    driver: overlay
secrets:
  ADMIN_PASSWORD:
    external: true
  LAUNCHER_SECRET:
    external: true
  USER_PASSWORD:
    external: true
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    external: true
services:
  accountLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/accountLeasingDb:/var/lib/postgresql/data
  accountleasing:
    depends_on:
    - accountLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=accountLeasingDb;Database=AccountLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: accountLeasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Version__Number: '0.2.45'
    image: loginvsi/accountleasing:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  accounts:
    depends_on:
    - accountsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=accountsDb;Database=Accounts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: accounts
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/accounts:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  accountsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/accountsDb:/var/lib/postgresql/data
  accountsworker:
    depends_on:
    - accountleasing
    - accounts
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__AccountsUrl: http://accounts
    image: loginvsi/accountsworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  appMonitorSourcesDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorSourcesDb:/var/lib/postgresql/data
  appMonitoringScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitoringScheduleDb:/var/lib/postgresql/data
  appMonitorsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorsDb:/var/lib/postgresql/data
  appmonitoringschedule:
    depends_on:
    - appMonitoringScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitoringScheduleDb;Database=AppMonitoringSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitoringSchedule
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitoringschedule:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitors:
    depends_on:
    - appMonitorsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorsDb;Database=AppMonitors;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitors
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitors:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitorscheduler:
    depends_on:
    - sessionleasing
    - appmonitoringschedule
    - licensing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Polling__Interval: 10
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__LicensingUrl: http://licensing/licensing
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
    image: loginvsi/appmonitorscheduler:1.0.0
    networks:
    - front
    restart: always
  appmonitorsources:
    depends_on:
    - appMonitorSourcesDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorSourcesDb;Database=AppMonitorSources;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appMonitorSources
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitorsources:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  contentdelivery:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ClientSecrets__Launcher: 39Q3R54C4PI0Y17ZA45B55PCFPA9PMW4OKILLK1D
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/contentdelivery:1.0.0
    networks:
    - front
    restart: always
  enginehub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: enginehub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/enginehub:1.0.0
    networks:
    - front
    restart: always
  enginehubworker:
    depends_on:
    - enginehub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://enginehub/enginehub/websockets
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
    image: loginvsi/enginehubworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  environmentConfigurationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/environmentConfigurationDb:/var/lib/postgresql/data
  environmentconfiguration:
    depends_on:
    - environmentConfigurationDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=environmentConfigurationDb;Database=EnvironmentConfiguration;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: environmentConfiguration
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/environmentconfiguration:1.0.0
    networks:
    - databases
    - front
    restart: always
  eventhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: eventhub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/enginehub:1.0.0
    networks:
    - front
    restart: always
  functionalEventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/functionalEventsDb:/var/lib/postgresql/data
  functionalevents:
    depends_on:
    - functionalEventsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=functionalEventsDb;Database=FunctionalEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: functionalEvents
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/functionalevents:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  functionaleventsworker:
    depends_on:
    - accountleasing
    - appmonitors
    - functionalevents
    - infrastructures
    - launcherleasing
    - launchers
    - measurementactions
    - measurementevents
    - sessionleasing
    - sessionmanagement
    - sessionrequests
    - virtualuserresults
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
      Services__FunctionalEventsUrl: http://functionalevents/functionalevents
      Services__InfrastructuresUrl: http://infrastructures/infrastructures
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__LaunchersUrl: http://launchers/launchers
      Services__MeasurementActionsUrl: http://measurementactions/measurementactions
      Services__MeasurementEventsUrl: http://measurementevents/measurementevents
      Services__SessionLeasingUrl: http://sessionLeasing/sessionLeasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/functionaleventsworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  gateway:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      START_DELAY: 60
    image: loginvsi/gateway_product:1.0.0
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityserver
    image: loginvsi/identityserver:1.0.0
    networks:
    - front
    restart: always
    secrets:
    - ADMIN_PASSWORD
    - USER_PASSWORD
    - LAUNCHER_SECRET
  infrastructures:
    depends_on:
    - infrastructuresDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=infrastructuresDb;Database=Infrastructures;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: infrastructures
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/infrastructures:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  infrastructuresDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/infrastructuresDb:/var/lib/postgresql/data
  launcherLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/launcherLeasingDb:/var/lib/postgresql/data
  launcherhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: launcherhub
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launcherhub:1.0.0
    networks:
    - front
    - messaging
    restart: always
  launcherhubworker:
    depends_on:
    - sessionmanagement
    - launcherleasing
    - launcherhub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://launcherhub/launcherhub/websockets
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
    image: loginvsi/launcherhubworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  launcherleasing:
    depends_on:
    - launcherLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launcherLeasingDb;Database=LauncherLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: launcherLeasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launcherleasing:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  launcherregistryworker:
    depends_on:
    - launchers
    - launcherleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__LaunchersUrl: http://launchers/launchers
    image: loginvsi/launcherregistryworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  launchers:
    depends_on:
    - launchersDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=Launchers;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: launchers
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launchers:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  launchersDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/launchersDb:/var/lib/postgresql/data
  licensing:
    depends_on:
    - licensingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=licensingDb;Database=Licensing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: licensing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/licensing:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  licensingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/licensingDb:/var/lib/postgresql/data
  licensingworker:
    depends_on:
    - licensing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Polling__Interval: 60
      Services__LicensingUrl: http://licensing/licensing
    image: loginvsi/licensingworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  loginScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/loginScheduleDb:/var/lib/postgresql/data
  loginmonitorscheduler:
    depends_on:
    - sessionrequests
    - loginschedule
    - licensing
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Polling__Interval: 10
      Services__LicensingUrl: http://licensing/licensing
      Services__LoginScheduleUrl: http://loginschedule/loginschedule
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/loginmonitorscheduler:1.0.0
    networks:
    - front
    restart: always
  loginschedule:
    depends_on:
    - loginScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=LoginSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginSchedule
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/loginschedule:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactions:
    depends_on:
    - logintimeactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeactionsDb;Database=LoginTimeActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginTimeActions
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeactions:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeactionsDb:/var/lib/postgresql/data
  logintimeevents:
    depends_on:
    - logintimeeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeeventsDb;Database=LoginTimeEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginTimeEvents
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeevents:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeeventsDb:/var/lib/postgresql/data
  measurementactions:
    depends_on:
    - measurementactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementactionsDb;Database=MeasurementActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementActions
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementactions:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementactionsDb:/var/lib/postgresql/data
  measurementactionsworker:
    depends_on:
    - virtualuserresults
    - measurementactions
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__MeasurementActionsUrl: http://measurementactions/measurementactions
      Services__MeasurementEventsUrl: http://measurementevents/measurementevents
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/measurementactionsworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  measurementevents:
    depends_on:
    - measurementeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementeventsDb;Database=MeasurementEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementEvents
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementevents:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementeventsDb:/var/lib/postgresql/data
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.6.12-management
    networks:
    - messaging
    restart: always
    volumes:
    - ${DB_ROOT}/messagebroker:/var/lib/rabbitmq/mnesia
  notificationshub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationshub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/notificationshub:1.0.0
    networks:
    - front
    restart: always
  notificationsworker:
    depends_on:
    - notificationshub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationshub
      Services__VirtualUserResultsUrl: http://virtualUserResults/virtualUserResults
    image: loginvsi/notificationsworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  publishingworker:
    depends_on:
    - appmonitors
    - appmonitorsources
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AppMonitorSourcesUrl: http://appmonitorsources/appmonitorsources
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
    image: loginvsi/publishingworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  reports:
    depends_on:
    - reportsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=reportsDb;Database=Reports;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: reports
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/reports:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  reportsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/reportsDb:/var/lib/postgresql/data
  reportschedules:
    depends_on:
    - reportschedulesDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=reportschedulesDb;Database=ReportSchedules;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: reportSchedules
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/reportschedules:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  reportschedulesDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/reportschedulesDb:/var/lib/postgresql/data
  reportsworker:
    depends_on:
    - reports
    - reportschedules
    - sessionrequests
    - infrastructures
    - virtualuserresults
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Polling__Interval: 60
      Services__InfrastructuresUrl: http://infrastructures
      Services__ReportSchedulesUrl: http://reportschedules/reportschedules
      Services__ReportsUrl: http://reports/reports
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/reportsworker:1.0.0
    networks:
    - front
    restart: on-failure
  scriptseeder:
    depends_on:
    - appmonitors
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
      Services__IdPUrl: http://identityserver/identityserver
    image: loginvsi/scriptseeder:1.0.0
    networks:
    - front
    restart: on-failure
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverUrls
    image: loginvsi/serverurls:1.0.0
    networks:
    - front
    restart: always
  sessionDiscoveryDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionDiscoveryDb:/var/lib/postgresql/data
  sessionLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLeasingDb:/var/lib/postgresql/data
  sessionLoginResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLoginResultsDb:/var/lib/postgresql/data
  sessionLogonScriptsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLogonScriptsDb:/var/lib/postgresql/data
  sessionManagementDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionManagementDb:/var/lib/postgresql/data
  sessionRegulationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRegulationDb:/var/lib/postgresql/data
  sessionRequestsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRequestsDb:/var/lib/postgresql/data
  sessioncalculator:
    depends_on:
    - infrastructures
    - appmonitoringschedule
    - sessionregulation
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Calculator__ScriptDurationInSeconds: 20
      Calculator__SessionTargetCountBuffer: 2
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
    image: loginvsi/sessioncalculator:1.0.0
    networks:
    - front
    - messaging
    restart: always
  sessiondiscovery:
    depends_on:
    - sessionDiscoveryDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionDiscoveryDb;Database=SessionDiscovery;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionDiscovery
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/sessiondiscovery:1.0.0
    networks:
    - databases
    - front
    restart: always
  sessiondiscoveryworker:
    depends_on:
    - sessiondiscovery
    - sessionmanagement
    - sessionrequests
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__SessionDiscoveryUrl: http://sessiondiscovery/sessiondiscovery
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessiondiscoveryworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  sessionleasing:
    depends_on:
    - sessionLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLeasingDb;Database=SessionLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionLeasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionleasing:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionloginresults:
    depends_on:
    - sessionLoginResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLoginResultsDb;Database=SessionLoginResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionLoginResults
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionloginresults:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionlogonscripts:
    depends_on:
    - sessionLogonScriptsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLogonScriptsDb;Database=SessionLogonScripts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionLogonScripts
      IdentityProvider__Authority: http://identityserver/identityserver
      SystemConfiguration__AllowUntrustedCertificates: "true"
    image: loginvsi/sessionlogonscripts:1.0.0
    networks:
    - databases
    - front
    restart: always
  sessionmanagement:
    depends_on:
    - sessionManagementDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionManagementDb;Database=SessionManagement;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionManagement
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionmanagement:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionmanagementworker:
    depends_on:
    - sessionmanagement
    - sessionrequests
    - accountleasing
    - launcherleasing
    - sessionleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionmanagementworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  sessionregulation:
    depends_on:
    - sessionRegulationDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRegulationDb;Database=SessionRegulation;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionRegulation
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionregulation:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionregulator:
    depends_on:
    - sessionmanagement
    - sessionregulation
    - sessionrequests
    - licensing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__LicensingUrl: http://licensing/licensing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionregulator:1.0.0
    networks:
    - front
    - messaging
    restart: always
  sessionrequests:
    depends_on:
    - sessionRequestsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRequestsDb;Database=SessionRequests;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionRequests
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionrequests:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionrequestworker:
    depends_on:
    - sessionrequests
    - accountleasing
    - launcherleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__InfrastructuresUrl: http://infrastructures/infrastructures
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionrequestworker:1.0.0
    networks:
    - front
    - messaging
    restart: always
  systemconfiguration:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: systemConfiguration
      IdentityProvider__Authority: http://identityserver/identityserver
      SystemConfiguration__AllowUntrustedCertificates: "true"
      Version__Number: '0.2.45'
    image: loginvsi/systemconfiguration:1.0.0
    networks:
    - front
    restart: always
  timeoutworker:
    depends_on:
    - accountleasing
    - launchers
    - launcherleasing
    - sessionleasing
    - sessionmanagement
    - sessionrequests
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__LaunchersUrl: http://launchers/launchers
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/timeoutworker:1.0.0
    networks:
    - front
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/ui_loginpi:1.0.0
    networks:
    - front
    restart: always
  virtualUserResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/virtualUserResultsDb:/var/lib/postgresql/data
  virtualuserresults:
    depends_on:
    - virtualUserResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=virtualUserResultsDb;Database=VirtualUserResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: virtualUserResults
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/virtualuserresults:1.0.0
    networks:
    - databases
    - front
    - messaging
    restart: always
version: "3.1"

