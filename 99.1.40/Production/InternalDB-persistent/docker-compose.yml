networks:
  databases:
    driver: overlay
  front:
    driver: overlay
  messaging:
    driver: overlay
secrets:
  ADMIN_PASSWORD:
    external: true
  LAUNCHER_SECRET:
    external: true
  USER_PASSWORD:
    external: true
  VSI_SSL_CERTIFICATE:
    file: ${SSL_CERTIFICATE_PATH}
  VSI_SSL_CERTIFICATE_KEY:
    file: ${SSL_CERTIFICATE_KEY_PATH}
  VSI_SSL_CERTIFICATE_KEY_PASSWORD:
    external: true
services:
  accountLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/accountLeasingDb:/var/lib/postgresql/data
  accountleasing:
    depends_on:
    - accountLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=accountLeasingDb;Database=AccountLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: accountleasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.40'
    image: loginvsi/accountleasing:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  accounts:
    depends_on:
    - accountsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=accountsDb;Database=Accounts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: accounts
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Version__Number: '99.1.40'
    image: loginvsi/accounts:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  accountsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/accountsDb:/var/lib/postgresql/data
  accountsworker:
    depends_on:
    - accountleasing
    - accounts
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__AccountsUrl: http://accounts
    image: loginvsi/accountsworker:dev
    networks:
    - front
    - messaging
    restart: always
  appMonitorSourcesDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorSourcesDb:/var/lib/postgresql/data
  appMonitoringScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitoringScheduleDb:/var/lib/postgresql/data
  appMonitorsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/appMonitorsDb:/var/lib/postgresql/data
  appmonitoringschedule:
    depends_on:
    - appMonitoringScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitoringScheduleDb;Database=AppMonitoringSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appmonitoringschedule
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitoringschedule:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitors:
    depends_on:
    - appMonitorsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorsDb;Database=AppMonitors;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appmonitors
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitors:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  appmonitorscheduler:
    depends_on:
    - appmonitoringschedule
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Polling__Interval: 10
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
    image: loginvsi/appmonitorscheduler:dev
    networks:
    - front
    restart: always
  appmonitorsources:
    depends_on:
    - appMonitorSourcesDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=appMonitorSourcesDb;Database=AppMonitorSources;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: appmonitorsources
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/appmonitorsources:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  contentdelivery:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/contentdelivery:dev
    networks:
    - front
    restart: always
  enginehub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: enginehub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/enginehub:dev
    networks:
    - front
    restart: always
  enginehubworker:
    depends_on:
    - enginehub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://enginehub/enginehub/websockets
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
    image: loginvsi/enginehubworker:dev
    networks:
    - front
    - messaging
    restart: always
  environmentConfigurationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/environmentConfigurationDb:/var/lib/postgresql/data
  environmentconfiguration:
    depends_on:
    - environmentConfigurationDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=environmentConfigurationDb;Database=EnvironmentConfiguration;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: environmentconfiguration
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/environmentconfiguration:dev
    networks:
    - databases
    - front
    restart: always
  eventhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: eventhub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/enginehub:dev
    networks:
    - front
    restart: always
  gateway:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      START_DELAY: 20
    image: loginvsi/gateway_product:dev
    networks:
    - front
    - messaging
    ports:
    - ${GATEWAY_PORT}:443
    restart: always
    secrets:
    - VSI_SSL_CERTIFICATE
    - VSI_SSL_CERTIFICATE_KEY
    - VSI_SSL_CERTIFICATE_KEY_PASSWORD
  identityserver:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__HostUrls: ${ALLOWED_CLIENT_URLS}
      Hosting__VirtualDirectory: identityserver
    image: loginvsi/identityserver:dev
    networks:
    - front
    restart: always
    secrets:
    - ADMIN_PASSWORD
    - USER_PASSWORD
    - LAUNCHER_SECRET
  infrastructures:
    depends_on:
    - infrastructuresDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=infrastructuresDb;Database=Infrastructures;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: infrastructures
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/infrastructures:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  infrastructuresDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/infrastructuresDb:/var/lib/postgresql/data
  launcherLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/launcherLeasingDb:/var/lib/postgresql/data
  launcherhub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: launcherhub
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launcherhub:dev
    networks:
    - front
    - messaging
    restart: always
  launcherhubworker:
    depends_on:
    - launchers
    - sessionmanagement
    - sessionrequests
    - launcherhub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://launcherhub/launcherhub/websockets
      Services__LauncherRegistryUrl: http://launchers/launchers
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/launcherhubworker:dev
    networks:
    - front
    - messaging
    restart: always
  launcherleasing:
    depends_on:
    - launcherLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launcherLeasingDb;Database=LauncherLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: launcherleasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launcherleasing:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  launcherregistryworker:
    depends_on:
    - launchers
    - launcherleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver
      MessageBroker__Hostname: messagebroker
      Services__LaunchersUrl: http://launchers/launchers
      Services__SessionRequestManagementUrl: http://launcherleasing/launcherleasing
    image: loginvsi/launcherregistryworker:dev
    networks:
    - front
    - messaging
    restart: always
  launchers:
    depends_on:
    - launchersDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=Launchers;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: launchers
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/launchers:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  launchersDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/launchersDb:/var/lib/postgresql/data
  loginScheduleDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/loginScheduleDb:/var/lib/postgresql/data
  loginmonitorscheduler:
    depends_on:
    - sessionrequests
    - loginschedule
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Polling__Interval: 10
      Services__LoginScheduleUrl: http://loginschedule/loginschedule
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/loginmonitorscheduler:dev
    networks:
    - front
    restart: always
  loginschedule:
    depends_on:
    - loginScheduleDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=launchersDb;Database=LoginSchedule;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: loginschedule
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/loginschedule:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactions:
    depends_on:
    - logintimeactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeactionsDb;Database=LoginTimeActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: logintimeactions
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeactions:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeactionsDb:/var/lib/postgresql/data
  logintimeevents:
    depends_on:
    - logintimeeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=logintimeeventsDb;Database=LoginTimeEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: logintimeevents
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/logintimeevents:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  logintimeeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/logintimeeventsDb:/var/lib/postgresql/data
  measurementactions:
    depends_on:
    - measurementactionsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementactionsDb;Database=MeasurementActions;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementactions
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementactions:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementactionsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementactionsDb:/var/lib/postgresql/data
  measurementactionsworker:
    depends_on:
    - virtualuserresults
    - measurementactions
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__MeasurementActionsUrl: http://measurementactions/measurementactions
      Services__MeasurementEventsUrl: http://measurementevents/measurementevents
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/measurementactionsworker:dev
    networks:
    - front
    - messaging
    restart: always
  measurementevents:
    depends_on:
    - measurementeventsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=measurementeventsDb;Database=MeasurementEvents;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: measurementevents
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/measurementevents:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  measurementeventsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/measurementeventsDb:/var/lib/postgresql/data
  messagebroker:
    deploy:
      restart_policy:
        condition: on-failure
    hostname: rabbitMQ-${COMPOSE_PROJECT_NAME}
    image: rabbitmq:3.6.12-management
    networks:
    - messaging
    restart: always
    volumes:
    - ${DB_ROOT}/messagebroker:/var/lib/rabbitmq/mnesia
  notificationshub:
    depends_on:
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: notificationshub
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/notificationshub:dev
    networks:
    - front
    restart: always
  notificationsworker:
    depends_on:
    - notificationshub
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__HubUrl: ws://notificationshub/notificationshub
    image: loginvsi/notificationsworker:dev
    networks:
    - front
    - messaging
    restart: always
  publishingworker:
    depends_on:
    - appmonitors
    - appmonitorsources
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AppMonitorSourcesUrl: http://appmonitorsources/appmonitorsources
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
    image: loginvsi/publishingworker:dev
    networks:
    - front
    - messaging
    restart: always
  reports:
    depends_on:
    - reportsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=reportsDb;Database=Reports;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: reports
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/reports:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  reportsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/reportsDb:/var/lib/postgresql/data
  reportschedules:
    depends_on:
    - reportschedulesDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=reportschedulesDb;Database=ReportSchedules;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: reportschedules
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/reportschedules:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  reportschedulesDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/reportschedulesDb:/var/lib/postgresql/data
  reportsworker:
    depends_on:
    - reports
    - reportschedules
    - sessionmanagement
    - virtualuserresults
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Polling__Interval: 60
      Services__ReportSchedulesUrl: http://reportschedules/reportschedules
      Services__ReportsUrl: http://reports/reports
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__VirtualUserResultsUrl: http://virtualuserresults/virtualuserresults
    image: loginvsi/reportsworker:dev
    networks:
    - front
    restart: on-failure
  scriptseeder:
    depends_on:
    - appmonitors
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      Services__AppMonitorsUrl: http://appmonitors/appmonitors
      Services__IdPUrl: http://identityserver/identityserver
    image: loginvsi/scriptseeder:dev
    networks:
    - front
    restart: on-failure
  serverurls:
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Hosting__VirtualDirectory: serverurls
    image: loginvsi/serverurls:dev
    networks:
    - front
    restart: always
  sessionDiscoveryDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionDiscoveryDb:/var/lib/postgresql/data
  sessionLeasingDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLeasingDb:/var/lib/postgresql/data
  sessionLoginResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLoginResultsDb:/var/lib/postgresql/data
  sessionLogonScriptsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionLogonScriptsDb:/var/lib/postgresql/data
  sessionManagementDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionManagementDb:/var/lib/postgresql/data
  sessionRegulationDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRegulationDb:/var/lib/postgresql/data
  sessionRequestsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/sessionRequestsDb:/var/lib/postgresql/data
  sessioncalculator:
    depends_on:
    - infrastructures
    - appmonitoringschedule
    - sessionregulation
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      Calculator__ScriptDurationInSeconds: 20
      Calculator__SessionTargetCountBuffer: 2
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AppMonitoringScheduleUrl: http://appmonitoringschedule/appmonitoringschedule
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
    image: loginvsi/sessioncalculator:dev
    networks:
    - front
    - messaging
    restart: always
  sessiondiscovery:
    depends_on:
    - sessionDiscoveryDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionDiscoveryDb;Database=SessionDiscovery;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessiondiscovery
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/sessiondiscovery:dev
    networks:
    - databases
    - front
    restart: always
  sessiondiscoveryworker:
    depends_on:
    - sessiondiscovery
    - sessionmanagement
    - sessionrequests
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityServer
      MessageBroker__Hostname: messagebroker
      Services__SessionDiscoveryUrl: http://sessiondiscovery/sessiondiscovery
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessiondiscoveryworker:dev
    networks:
    - front
    - messaging
    restart: always
  sessionleasing:
    depends_on:
    - sessionLeasingDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLeasingDb;Database=SessionLeasing;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionleasing
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionleasing:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionloginresults:
    depends_on:
    - sessionLoginResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLoginResultsDb;Database=SessionLoginResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionloginresults
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionloginresults:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionlogonscripts:
    depends_on:
    - sessionLogonScriptsDb
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionLogonScriptsDb;Database=SessionLogonScripts;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionlogonscripts
      IdentityProvider__Authority: http://identityserver/identityserver
    image: loginvsi/sessionlogonscripts:dev
    networks:
    - databases
    - front
    restart: always
  sessionmanagement:
    depends_on:
    - sessionManagementDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionManagementDb;Database=SessionManagement;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionmanagement
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionmanagement:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionmanagementworker:
    depends_on:
    - sessionmanagement
    - sessionrequests
    - accountleasing
    - launcherleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionmanagementworker:dev
    networks:
    - front
    - messaging
    restart: always
  sessionregulation:
    depends_on:
    - sessionRegulationDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRegulationDb;Database=SessionRegulation;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionregulation
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionregulation:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionregulator:
    depends_on:
    - sessionregulation
    - sessionmanagement
    - sessionrequests
    - accounts
    - infrastructures
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountsUrl: http://accounts/accounts
      Services__InfrastructuresUrl: http://infrastructures/infrastructures
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRegulationUrl: http://sessionregulation/sessionregulation
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionregulator:dev
    networks:
    - front
    - messaging
    restart: always
  sessionrequests:
    depends_on:
    - sessionRequestsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=sessionRequestsDb;Database=SessionRequests;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: sessionrequests
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/sessionrequests:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
  sessionrequestworker:
    depends_on:
    - sessionrequests
    - accountleasing
    - launcherleasing
    - messagebroker
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
      Services__AccountLeasingUrl: http://accountleasing/accountleasing
      Services__InfrastructuresUrl: http://infrastructures/infrastructures
      Services__LauncherLeasingUrl: http://launcherleasing/launcherleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/sessionrequestworker:dev
    networks:
    - front
    - messaging
    restart: always
  timeoutworker:
    depends_on:
    - accountleasing
    - launchers
    - launcherleasing
    - sessionleasing
    - sessionmanagement
    - sessionrequests
    - identityserver
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      IdentityProvider__Authority: http://identityserver/identityserver
      Services__AccountLeasingsUrl: http://accountleasing/accountleasing
      Services__LauncherLeasingsUrl: http://launcherleasing/launcherleasing
      Services__LaunchersUrl: http://launchers/launchers
      Services__SessionLeasingUrl: http://sessionleasing/sessionleasing
      Services__SessionManagementUrl: http://sessionmanagement/sessionmanagement
      Services__SessionRequestsUrl: http://sessionrequests/sessionrequests
    image: loginvsi/timeoutworker:dev
    networks:
    - front
    restart: always
  ui:
    deploy:
      restart_policy:
        condition: on-failure
    image: loginvsi/ui_loginpi:dev
    networks:
    - front
    restart: always
  virtualUserResultsDb:
    deploy:
      restart_policy:
        condition: on-failure
    image: postgres:9
    networks:
    - databases
    restart: always
    volumes:
    - ${DB_ROOT}/virtualUserResultsDb:/var/lib/postgresql/data
  virtualuserresults:
    depends_on:
    - virtualUserResultsDb
    - identityserver
    - messagebroker
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      DB__ConnectionString: Server=virtualUserResultsDb;Database=VirtualUserResults;Username=postgres;
      DB__DbType: PostgreSQL
      Hosting__VirtualDirectory: virtualuserresults
      IdentityProvider__Authority: http://identityserver/identityserver
      MessageBroker__Hostname: messagebroker
    image: loginvsi/virtualuserresults:dev
    networks:
    - databases
    - front
    - messaging
    restart: always
version: "3.1"

